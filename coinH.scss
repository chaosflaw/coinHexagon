$coinDiam: 5em;

* {
	margin: 0;
	padding: 0;
}

body {
	background-color: #e1e1e1;
	color: #4d6066;
	position: absolute;
	left: 50%;
	top: 50%;
	transform: translate(-50%,-50%);
}

.grid {
	width: auto;
	display: flex;
	flex-flow: column nowrap;
}
.gridRow {
	display: flex;
	flex-flow: row nowrap;
	margin: auto;
}
//Transform aligns the coins to form an hexagonal grid; I'm doing 1/4 to each side due to how gridRows are being centered inside grid (margin: auto). Originally, just translating even rows by 1/2 coin diameter caused the odd rows to be centered but all translated rows to be off-center by that same distance
.gridRow:nth-child(even) {
	transform: translateX($coinDiam / 4);
}
.gridRow:nth-child(odd) {
	transform: translateX(- $coinDiam / 4);
}
.gridRow:nth-child(1n+1) {
	margin-top: -($coinDiam / 7.5);
}
.gridRow > li {
	list-style-type: none;
}
.gridCoin {
	margin: 0.1rem;
	list-style-type: none;
	width: $coinDiam;
	height: $coinDiam;
}
.gridCoinIn {
	width: 100%; 
	height: 100%;
	border-radius: 50%;
	background: none;
	border: 2px #97b7d6;
	border-style: ridge groove groove ridge;
	box-sizing: border-box !important; 
}

.active {
	background: #c0c0c0;
	border-style: groove ridge ridge groove;
	cursor: pointer;
}
.destination {
	border: 4px #7771d2;
	border-style: ridge groove groove ridge;
	cursor: pointer;
}
.active.selected {
	border: 6px double #21A076;
}
.active.win {
	background: #9bb88b;
}

.rules {
	z-index: 1;
	position: fixed;
	top: 50%;
	left: 50%;
	transform: translate(-50%,-50%);
	width: 60%;
	margin: 0 auto;
	padding: 15px 15px 15px 20px;
	border-radius: 15px;
	background: #c0c0c0;
	visibility: hidden;
	opacity: 0;
	transition: opacity 0.5s;
}
.rules > p {
	text-indent: 1em;
}
.rules > ul > li {
	margin-left: 1em;
}

.header {
	text-align: center;
	margin: 15px auto;
}
.footer {
	margin: 0 auto;
	width: auto;
	text-align: center;
}
.footer > * {
	cursor: pointer;
}
#reset {
	float: left;
	position: relative;
	left: 0;
}
#rules {
	position: fixed;
	left: 50%;
	transform: translateX(-50%);
}
#solution {
	float: right;
	position: relative;
	right: 0;
	width: initial;
}

@media screen and (min-width: 480px) and (max-width: 768px) {
	.grid, .footer, .header {
		width: ($coinDiam * 8)*0.8;
	}
	.gridCoin {
		width: $coinDiam*0.8; 
		height: $coinDiam*0.8;
	}
	.gridRow:nth-child(even) {
		transform: translateX(($coinDiam / 4)*0.8);
	}
	.gridRow:nth-child(odd) {
		transform: translateX((- $coinDiam / 4)*0.8);
	}
	.gridRow:nth-child(1n+1) {
		margin-top: (-($coinDiam / 7.5)*0.8);
	}
}

@media screen and (max-width: 480px) {
	.grid, .footer, .header {
		width: ($coinDiam * 8)*0.55;
	}
	.gridCoin {
		width: ($coinDiam*0.55); 
		height: ($coinDiam*0.55);
	}
	.gridRow:nth-child(even) {
		transform: translateX(($coinDiam / 4)*0.55);
	}
	.gridRow:nth-child(odd) {
		transform: translateX((- $coinDiam / 4)*0.55);
	}
	.gridRow:nth-child(1n+1) {
		margin-top: (-($coinDiam / 7.5)*0.55);
	}
	.rules {
		width: 90%;
	}
}